services:
  postgres:
    container_name: postgres
    image: postgres:17-alpine
    ports: ["${POSTGRES}:5432"]
    command: postgres -c 'max_connections=1000' -c 'shared_preload_libraries=pg_stat_statements'
    volumes:
      - ./postgres/setup.sql:/docker-entrypoint-initdb.d/setup.sql:ro
    environment:
      POSTGRES_INITDB_ARGS: "--encoding UTF8 --locale=C"
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: postgres
    healthcheck:
      { interval: 1s, retries: 20, test: pg_isready -U postgres }

  graph-node:
    container_name: graph-node
    build:
      context: "graph-node"
      args:
        GRAPH_NODE_VERSION: ${GRAPH_NODE_VERSION}
    depends_on:
      postgres: { condition: service_healthy }
    stop_signal: SIGKILL
    ports:
      - ${GRAPH_NODE_GRAPHQL}:8000
      - ${GRAPH_NODE_ADMIN}:8020
      - ${GRAPH_NODE_STATUS}:8030
      - ${GRAPH_NODE_METRICS}:8040
    volumes:
      - ./.env:/opt/.env:ro
    healthcheck:
      { interval: 1s, retries: 20, test: curl -f http://127.0.0.1:8030 }

  indexer-agent:
    container_name: indexer-agent
    build:
      context: indexer-agent
      args:
        INDEXER_AGENT_VERSION: ${INDEXER_AGENT_VERSION}
    platform: linux/amd64
    depends_on:
      postgres: { condition: service_healthy }
      graph-node: { condition: service_healthy }
    ports: ["${INDEXER_MANAGEMENT}:7600"]
    stop_signal: SIGKILL
    volumes:
      - ./.env:/opt/.env:ro
      - ./horizon.json:/opt/horizon.json:ro
      - ./subgraph-service.json:/opt/subgraph-service.json:ro
      - ./tap-contracts.json:/opt/tap-contracts.json:ro
    healthcheck:
      { interval: 10s, retries: 600, test: curl -f http://127.0.0.1:7600/ }

  indexer-service:
    container_name: indexer-service
    build:
      target: "wrapper" # Set to "wrapper-dev" for building from source
      context: indexer-service
      args:
        INDEXER_SERVICE_RS_VERSION: ${INDEXER_SERVICE_RS_VERSION}
    depends_on:
      indexer-agent: { condition: service_healthy }
    ports: 
      - "${INDEXER_SERVICE}:7601"
    stop_signal: SIGKILL
    volumes:
      - ./.env:/opt/.env:ro
      - ./horizon.json:/opt/horizon.json:ro
      - ./subgraph-service.json:/opt/subgraph-service.json:ro
      - ./tap-contracts.json:/opt/tap-contracts.json:ro
    environment:
      RUST_LOG: info,indexer_service_rs=trace
      RUST_BACKTRACE: 1
    healthcheck:
      { interval: 1s, retries: 100, test: curl -f http://127.0.0.1:7601/ }

  tap-agent:
    container_name: tap-agent
    build:
      target: "wrapper" # Set to "wrapper-dev" for building from source
      context: tap-agent
      args:
        INDEXER_TAP_AGENT_VERSION: ${INDEXER_TAP_AGENT_VERSION}
    depends_on:
      indexer-agent: { condition: service_healthy }
    stop_signal: SIGKILL
    volumes:
      - ./.env:/opt/.env:ro
      - ./horizon.json:/opt/horizon.json:ro
      - ./subgraph-service.json:/opt/subgraph-service.json:ro
      - ./tap-contracts.json:/opt/tap-contracts.json:ro
    environment:
      RUST_LOG: info,indexer_tap_agent=trace
      RUST_BACKTRACE: 1