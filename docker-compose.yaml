version: "3"
services:
  controller:
    container_name: controller
    build: { dockerfile: controller/Dockerfile }
    ports:
      - ${CONTROLLER}:6001

  chain:
    container_name: chain
    image: ghcr.io/foundry-rs/foundry:latest
    ports:
      - ${CHAIN_RPC}:8545
    command: ['anvil --host=0.0.0.0 --chain-id=1337 --mnemonic="${MNEMONIC}"']

  ipfs:
    container_name: ipfs
    image: ipfs/kubo:latest
    ports:
      - ${IPFS_RPC}:5001

  redpanda:
    container_name: redpanda
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.17
    ports:
      - ${REDPANDA_SCHEMA_REGISTRY}:8081
      - ${REDPANDA_PANDAPROXY}:8082
      - ${REDPANDA_KAFKA}:9092
      - ${REDPANDA_ADMIN}:9644
    command:
      - redpanda
      - start
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level debug
      - --kafka-addr internal://redpanda:9092,external://localhost:9092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:9092
      - --pandaproxy-addr internal://redpanda:8082,external://localhost:8082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:8082
      - --schema-registry-addr internal://redpanda:8081,external://localhost:8081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145

  postgres:
    container_name: postgres
    image: postgres:14.5-alpine
    ports:
      - ${POSTGRES}:5432
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    volumes:
      - ./postgres/create-tables.sql:/docker-entrypoint-initdb.d/create-tables.sql:ro
    environment:
      POSTGRES_INITDB_ARGS: "--encoding UTF8 --locale=C"
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: dev
      POSTGRES_PASSWORD:

  graph-node:
    container_name: graph-node
    build: { dockerfile: graph-node/Dockerfile }
    ports:
      - ${GRAPH_NODE_GRAPHQL}:8000
      - ${GRAPH_NODE_ADMIN}:8020
      - ${GRAPH_NODE_STATUS}:8030
      - ${GRAPH_NODE_METRICS}:8040

  graph-contracts:
    container_name: graph-contracts
    build: { dockerfile: graph-contracts/contracts.dockerfile }

  graph-subgraph:
    container_name: graph-subgraph
    build: { dockerfile: graph-contracts/subgraph.dockerfile }

  block-oracle:
    container_name: block-oracle
    build: { dockerfile: block-oracle/Dockerfile }

  indexer-agent:
    container_name: indexer-agent
    build: { dockerfile: indexer/indexer-ts.dockerfile }
    command: sh indexer/agent.sh
    ports:
      - ${INDEXER_MANAGEMENT}:18000

  tap-contracts:
    container_name: tap-contracts
    build: { dockerfile: tap-contracts/contracts.dockerfile }

  tap-subgraph:
    container_name: tap-subgraph
    build: { dockerfile: tap-subgraph/subgraph.dockerfile }

  indexer-service:
    container_name: indexer-service
    build: { dockerfile: indexer-rs/indexer-service.dockerfile }
    ports:
      - ${INDEXER_SERVICE}:7600

  indexer-allocation:
    container_name: indexer-allocation
    build: { dockerfile: indexer/allocation.dockerfile }

  studio-api:
    container_name: studio-api
    build:
      dockerfile: studio/Dockerfile
      ssh: ["default"]
    command: sh studio/api.sh
    ports:
      - ${STUDIO_API}:4000

  studio-admin:
    container_name: studio-admin
    build:
      dockerfile: studio/Dockerfile
      ssh: ["default"]
    command: sh studio/admin.sh
    ports:
      - ${STUDIO_ADMIN}:4003

  gateway:
    container_name: gateway
    build:
      dockerfile: gateway/Dockerfile
      ssh: ["default"]
    ports:
      - ${GATEWAY}:6700
